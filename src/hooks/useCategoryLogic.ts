
import { useState, useEffect } from 'react';
import { useListings } from '@/hooks/useListings';
import { useUniversalFiltersStore } from '@/stores/useUniversalFiltersStore';

export function useCategoryLogic(categoryId: string | undefined) {
  const { getListings, listings, loading, error } = useListings();
  const [selectedSubcategory, setSelectedSubcategory] = useState<string | undefined>();
  const { filters } = useUniversalFiltersStore();
  const [isInitialized, setIsInitialized] = useState(false);

  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–π –æ—Ç —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∫ —á–∏—Å–ª–æ–≤—ã–º (—Å–æ–≥–ª–∞—Å–Ω–æ —Ä–µ–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º –≤ Supabase)
  const getCategoryIdNumber = (categoryStr: string): number | undefined => {
    const categoryMap: Record<string, number> = {
      'electronics': 3, // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Å 1 –Ω–∞ 3 –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¥–∞–Ω–Ω—ã–º –≤ Supabase
      'fashion': 2,
      'home': 3,
      'transport': 4,
      'property': 5,
      'kids': 6,
      'pharmacy': 7,
      'food': 8,
      'services': 9,
      'pets': 10,
      'hobby': 11,
      'beauty': 12
    };
    return categoryMap[categoryStr];
  };

  // –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π useEffect –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (!categoryId || isInitialized) return;

    const numericCategoryId = getCategoryIdNumber(categoryId);
    console.log(`üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${categoryId} (ID: ${numericCategoryId})`);
    
    if (numericCategoryId) {
      // –ü–µ—Ä–µ–¥–∞–µ–º —Ç–æ–ª—å–∫–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      const filterParams = {
        categoryId: numericCategoryId
      };
      
      console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', filterParams);
      console.log('üéØ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Electronics (ID: 3)');
      
      // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (page: 1, limit: 50)
      getListings(filterParams, 'newest', 1, 50).finally(() => {
        setIsInitialized(true);
      });
    } else {
      console.warn(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${categoryId}`);
      setIsInitialized(true);
    }
  }, [categoryId, getListings]);

  // –û—Ç–¥–µ–ª—å–Ω—ã–π useEffect –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  useEffect(() => {
    if (!isInitialized || !categoryId) return;

    const numericCategoryId = getCategoryIdNumber(categoryId);
    if (numericCategoryId) {
      const filterParams = {
        categoryId: numericCategoryId,
        priceRange: filters.priceRange,
        condition: filters.condition !== 'any' ? filters.condition : undefined
      };
      
      console.log('üîÑ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:', filterParams);
      // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (page: 1, limit: 50)
      getListings(filterParams, 'newest', 1, 50);
    }
  }, [filters, isInitialized, categoryId, getListings]);

  const handleSearch = () => {
    console.log('üîç Search triggered with filters:', filters, 'subcategory:', selectedSubcategory);
    if (categoryId) {
      const numericCategoryId = getCategoryIdNumber(categoryId);
      if (numericCategoryId) {
        // –ò—Å–ø—Ä–∞–≤–ª—è–µ–º: –∏—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (page: 1, limit: 50)
        getListings({
          categoryId: numericCategoryId,
          priceRange: filters.priceRange,
          condition: filters.condition !== 'any' ? filters.condition : undefined
        }, 'newest', 1, 50);
      }
    }
  };

  const handleSubcategorySelect = (subcategoryId: string) => {
    setSelectedSubcategory(subcategoryId === selectedSubcategory ? undefined : subcategoryId);
  };

  // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Supabase –∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É ListingCard
  const adaptedListings = listings.map(listing => ({
    id: listing.id,
    title: listing.title,
    description: listing.description,
    imageUrl: listing.images?.[0] || '/placeholder.svg',
    originalPrice: listing.regular_price || 0,
    discountPrice: listing.discount_price || listing.regular_price || 0,
    discount: listing.discount_percent || 0,
    city: (listing as any).cities?.name_ru || '–ù–µ —É–∫–∞–∑–∞–Ω',
    categoryId: categoryId || '',
    subcategoryId: '',
    isFeatured: listing.is_premium || false,
    createdAt: listing.created_at,
    views: listing.views || 0
  }));

  console.log(`üìä –û—Ç–æ–±—Ä–∞–∂–∞–µ–º ${adaptedListings.length} –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categoryId}`);
  console.log('üìã –î–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏–∑ Supabase:', listings);
  console.log('‚ú® –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', adaptedListings);

  return {
    listings,
    loading,
    error,
    isInitialized,
    selectedSubcategory,
    adaptedListings,
    handleSearch,
    handleSubcategorySelect,
    getCategoryIdNumber
  };
}
