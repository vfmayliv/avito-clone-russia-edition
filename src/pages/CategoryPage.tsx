
import { useState, useEffect } from 'react';
import { useParams, useSearchParams } from 'react-router-dom';
import { useAppWithTranslations } from '@/stores/useAppStore';
import { Header } from '@/components/Header';
import { Footer } from '@/components/Footer';
import { BreadcrumbNavigation } from '@/components/BreadcrumbNavigation';
import { useListings } from '@/hooks/useListings';
import { getCategoryConfig } from '@/categories/categoryRegistry';
import { ListingCard } from '@/components/ListingCard';
import { UniversalFilters } from '@/components/filters/UniversalFilters';
import { CategoryTreeFilter } from '@/components/filters/CategoryTreeFilter';
import { useUniversalFiltersStore } from '@/stores/useUniversalFiltersStore';

export default function CategoryPage() {
  const { slug } = useParams<{ slug: string }>();
  const [searchParams] = useSearchParams();
  const { language, t } = useAppWithTranslations();
  const { getListings, listings, loading, error } = useListings();
  const [selectedSubcategory, setSelectedSubcategory] = useState<string | undefined>();
  const { filters, setFilters, resetFilters } = useUniversalFiltersStore();
  const [isInitialized, setIsInitialized] = useState(false);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º slug –Ω–∞–ø—Ä—è–º—É—é –∫–∞–∫ categoryId
  const categoryId = slug;

  // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–Ω—ã–π –º–∞–ø–ø–∏–Ω–≥ ID –∫–∞—Ç–µ–≥–æ—Ä–∏–π –æ—Ç —Å—Ç—Ä–æ–∫–æ–≤—ã—Ö –∫ —á–∏—Å–ª–æ–≤—ã–º (—Å–æ–≥–ª–∞—Å–Ω–æ —Ä–µ–∞–ª—å–Ω—ã–º –¥–∞–Ω–Ω—ã–º –≤ Supabase)
  const getCategoryIdNumber = (categoryStr: string): number | undefined => {
    const categoryMap: Record<string, number> = {
      'electronics': 3, // –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ —Å 1 –Ω–∞ 3 –¥–ª—è —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –¥–∞–Ω–Ω—ã–º –≤ Supabase
      'fashion': 2,
      'home': 3,
      'transport': 4,
      'property': 5,
      'kids': 6,
      'pharmacy': 7,
      'food': 8,
      'services': 9,
      'pets': 10,
      'hobby': 11,
      'beauty': 12
    };
    return categoryMap[categoryStr];
  };

  // –ï–¥–∏–Ω—Å—Ç–≤–µ–Ω–Ω—ã–π useEffect –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ –∏ –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö
  useEffect(() => {
    if (!categoryId || isInitialized) return;

    const numericCategoryId = getCategoryIdNumber(categoryId);
    console.log(`üîç –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏: ${categoryId} (ID: ${numericCategoryId})`);
    
    if (numericCategoryId) {
      // –ü–µ—Ä–µ–¥–∞–µ–º —Ç–æ–ª—å–∫–æ –º–∏–Ω–∏–º–∞–ª—å–Ω–æ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã –¥–ª—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
      const filterParams = {
        categoryId: numericCategoryId
      };
      
      console.log('üìã –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏:', filterParams);
      console.log('üéØ –ó–∞–≥—Ä—É–∂–∞–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ Electronics (ID: 3)');
      
      getListings(filterParams, 'newest', 100).finally(() => {
        setIsInitialized(true);
      });
    } else {
      console.warn(`‚ùå –ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: ${categoryId}`);
      setIsInitialized(true);
    }
  }, [categoryId, getListings]); // –î–æ–±–∞–≤–∏–ª getListings –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

  // –û—Ç–¥–µ–ª—å–Ω—ã–π useEffect –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Ñ–∏–ª—å—Ç—Ä–æ–≤
  useEffect(() => {
    if (!isInitialized || !categoryId) return;

    const numericCategoryId = getCategoryIdNumber(categoryId);
    if (numericCategoryId) {
      const filterParams = {
        categoryId: numericCategoryId,
        priceRange: filters.priceRange,
        condition: filters.condition !== 'any' ? filters.condition : undefined
      };
      
      console.log('üîÑ –ü–∞—Ä–∞–º–µ—Ç—Ä—ã —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏:', filterParams);
      getListings(filterParams, 'newest', 100);
    }
  }, [filters, isInitialized, categoryId, getListings]); // –î–æ–±–∞–≤–∏–ª –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏

  const config = categoryId ? getCategoryConfig(categoryId) : null;

  // Show category tree for categories with Supabase subcategories
  const shouldShowCategoryTree = categoryId === 'kids' || 
    categoryId === 'pharmacy' || 
    categoryId === 'fashion' || 
    categoryId === 'food' || 
    categoryId === 'electronics' ||
    categoryId === 'home' ||
    categoryId === 'services' ||
    categoryId === 'pets' ||
    categoryId === 'hobby' ||
    categoryId === 'beauty';

  // Skip universal filters for transport and property categories
  const shouldShowUniversalFilters = categoryId && 
    categoryId !== 'transport' && 
    categoryId !== 'property';

  // Fall back to default components if no config is found
  const FiltersComponent = config?.filtersComponent;
  const CardComponent = config?.cardComponent || ListingCard;

  if (!categoryId) {
    return (
      <div className="min-h-screen flex flex-col">
        <Header />
        <main className="flex-1 container mx-auto px-4 py-8">
          <div>{language === 'ru' ? '–ö–∞—Ç–µ–≥–æ—Ä–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω–∞' : '–°–∞–Ω–∞—Ç —Ç–∞–±—ã–ª–º–∞–¥—ã'}</div>
        </main>
        <Footer />
      </div>
    );
  }

  const categoryName = config?.name?.[language] || 
    (categoryId === 'property'
      ? (language === 'ru' ? '–ù–µ–¥–≤–∏–∂–∏–º–æ—Å—Ç—å' : '–ñ—ã–ª–∂—ã–º–∞–π—Ç—ã–Ω –º“Ø–ª—ñ–∫')
      : categoryId === 'transport'
      ? (language === 'ru' ? '–¢—Ä–∞–Ω—Å–ø–æ—Ä—Ç' : '–ö”©–ª—ñ–∫')
      : categoryId === 'electronics'
      ? (language === 'ru' ? '–¢–µ—Ö–Ω–∏–∫–∞ –∏ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞' : '–¢–µ—Ö–Ω–∏–∫–∞ –∂”ô–Ω–µ —ç–ª–µ–∫—Ç—Ä–æ–Ω–∏–∫–∞')
      : categoryId === 'kids'
      ? (language === 'ru' ? '–î–µ—Ç—è–º' : '–ë–∞–ª–∞–ª–∞—Ä“ì–∞')
      : categoryId === 'pharmacy'
      ? (language === 'ru' ? '–ê–ø—Ç–µ–∫–∏' : '–î”ô—Ä—ñ—Ö–∞–Ω–∞–ª–∞—Ä')
      : categoryId === 'fashion'
      ? (language === 'ru' ? '–ú–æ–¥–∞ –∏ —Å—Ç–∏–ª—å' : '–°”ô–Ω –∂”ô–Ω–µ —Å—Ç–∏–ª—å')
      : categoryId === 'food'
      ? (language === 'ru' ? '–ü—Ä–æ–¥—É–∫—Ç—ã –ø–∏—Ç–∞–Ω–∏—è' : '–ê–∑—ã“õ-—Ç“Ø–ª—ñ–∫')
      : categoryId === 'home'
      ? (language === 'ru' ? '–í—Å–µ –¥–ª—è –¥–æ–º–∞ –∏ –¥–∞—á–∏' : '“Æ–π –º–µ–Ω –¥–∞—á–∞ “Ø—à—ñ–Ω –±”ô—Ä—ñ')
      : categoryId === 'services'
      ? (language === 'ru' ? '–£—Å–ª—É–≥–∏' : '“ö—ã–∑–º–µ—Ç—Ç–µ—Ä')
      : categoryId === 'pets'
      ? (language === 'ru' ? '–ó–æ–æ—Ç–æ–≤–∞—Ä—ã' : '–ñ–∞–Ω—É–∞—Ä–ª–∞—Ä —Ç–∞—É–∞—Ä–ª–∞—Ä—ã')
      : categoryId === 'hobby'
      ? (language === 'ru' ? '–•–æ–±–±–∏ –∏ —Å–ø–æ—Ä—Ç' : '–•–æ–±–±–∏ –∂”ô–Ω–µ —Å–ø–æ—Ä—Ç')
      : categoryId === 'beauty'
      ? (language === 'ru' ? '–ö—Ä–∞—Å–æ—Ç–∞ –∏ –∑–¥–æ—Ä–æ–≤—å–µ' : '–°“±–ª—É–ª—ã“õ –∂”ô–Ω–µ –¥–µ–Ω—Å–∞—É–ª—ã“õ')
      : (language === 'ru' ? '–¢–æ–≤–∞—Ä—ã' : '–¢–∞—É–∞—Ä–ª–∞—Ä'));

  const handleSearch = () => {
    console.log('üîç Search triggered with filters:', filters, 'subcategory:', selectedSubcategory);
    if (categoryId) {
      const numericCategoryId = getCategoryIdNumber(categoryId);
      if (numericCategoryId) {
        getListings({
          categoryId: numericCategoryId,
          priceRange: filters.priceRange,
          condition: filters.condition !== 'any' ? filters.condition : undefined
        }, 'newest', 100);
      }
    }
  };

  const handleSubcategorySelect = (subcategoryId: string) => {
    setSelectedSubcategory(subcategoryId === selectedSubcategory ? undefined : subcategoryId);
  };

  // –ê–¥–∞–ø—Ç–∏—Ä—É–µ–º –¥–∞–Ω–Ω—ã–µ –∏–∑ Supabase –∫ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å—É ListingCard
  const adaptedListings = listings.map(listing => ({
    id: listing.id,
    title: listing.title,
    description: listing.description,
    imageUrl: listing.images?.[0] || '/placeholder.svg',
    originalPrice: listing.regular_price || 0,
    discountPrice: listing.discount_price || listing.regular_price || 0,
    discount: listing.discount_percent || 0,
    city: (listing as any).cities?.name_ru || '–ù–µ —É–∫–∞–∑–∞–Ω',
    categoryId: categoryId || '',
    subcategoryId: '',
    isFeatured: listing.is_premium || false,
    createdAt: listing.created_at,
    views: listing.views || 0
  }));

  console.log(`üìä –û—Ç–æ–±—Ä–∞–∂–∞–µ–º ${adaptedListings.length} –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ ${categoryId}`);
  console.log('üìã –î–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –∏–∑ Supabase:', listings);
  console.log('‚ú® –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è:', adaptedListings);

  return (
    <div className="min-h-screen flex flex-col">
      <Header />
      <BreadcrumbNavigation currentPage={categoryName} />
      <main className="flex-1">
        <div className="container mx-auto px-4 py-8">
          <h1 className="text-2xl font-semibold mb-6">{categoryName}</h1>
          
          {error && (
            <div className="mb-4 p-4 bg-red-100 border border-red-400 text-red-700 rounded">
              –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏: {error}
            </div>
          )}
          
          <div className="flex gap-8">
            {/* Filters Sidebar */}
            <div className="w-80 flex-shrink-0 space-y-6">
              {/* Category Tree Filter */}
              {shouldShowCategoryTree && (
                <CategoryTreeFilter
                  categoryId={categoryId}
                  onCategorySelect={handleSubcategorySelect}
                  selectedCategoryId={selectedSubcategory}
                />
              )}
              
              {/* Universal Filters */}
              {shouldShowUniversalFilters && (
                <UniversalFilters
                  filters={filters}
                  onFilterChange={setFilters}
                  onReset={resetFilters}
                  onSearch={handleSearch}
                />
              )}
              
              {/* Custom Category Filters */}
              {FiltersComponent && (
                <FiltersComponent
                  filters={{}}
                  onFilterChange={() => {}}
                  onReset={() => {}}
                  onSearch={handleSearch}
                  districts={[]}
                  config={{
                    cities: [],
                    onCityChange: () => {},
                    selectedCity: null
                  }}
                  brands={[]}
                  activeFiltersCount={0}
                />
              )}
            </div>
            
            {/* Listings Content */}
            <div className="flex-1">
              <div className="mb-6">
                <p className="text-gray-600">
                  {loading && !isInitialized ? 
                    (language === 'ru' ? '–ó–∞–≥—Ä—É–∂–∞–µ–º...' : '–ñ“Ø–∫—Ç–µ—É...') :
                    `${language === 'ru' ? '–ù–∞–π–¥–µ–Ω–æ' : '–¢–∞–±—ã–ª–¥—ã'} ${adaptedListings.length} ${language === 'ru' ? '–æ–±—ä—è–≤–ª–µ–Ω–∏–π' : '—Ö–∞–±–∞—Ä–ª–∞–Ω–¥—ã—Ä—É'}`
                  }
                </p>
                {/* –û—Ç–ª–∞–¥–æ—á–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è */}
                {process.env.NODE_ENV === 'development' && (
                  <div className="text-xs text-gray-400 mt-2 space-y-1">
                    <p>üìä –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–∑ –±–∞–∑—ã: {listings.length}</p>
                    <p>üéØ –ö–∞—Ç–µ–≥–æ—Ä–∏—è ID: {getCategoryIdNumber(categoryId || '')}</p>
                    <p>üîç –ê–∫—Ç–∏–≤–Ω—ã–µ —Ñ–∏–ª—å—Ç—Ä—ã: {JSON.stringify(filters)}</p>
                    <p>‚ö° –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞: {isInitialized ? '–î–∞' : '–ù–µ—Ç'}</p>
                  </div>
                )}
              </div>
              
              {/* Listings grid */}
              {loading && !isInitialized ? (
                <div className="text-center py-8">
                  <div className="animate-spin rounded-full h-32 w-32 border-b-2 border-primary mx-auto"></div>
                </div>
              ) : (
                <div className="grid grid-cols-2 sm:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-4 sm:gap-6">
                  {adaptedListings.map(listing => (
                    <CardComponent key={listing.id} listing={listing} />
                  ))}
                </div>
              )}
              
              {!loading && adaptedListings.length === 0 && isInitialized && (
                <div className="text-center py-8">
                  <p className="text-gray-500">{t('noListingsFound', '–û–±—ä—è–≤–ª–µ–Ω–∏–π –Ω–µ –Ω–∞–π–¥–µ–Ω–æ')}</p>
                  <p className="text-sm text-gray-400 mt-2">
                    {language === 'ru' ? 
                      '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∏–∑–º–µ–Ω–∏—Ç—å —Ñ–∏–ª—å—Ç—Ä—ã –∏–ª–∏ –≤—ã–±—Ä–∞—Ç—å –¥—Ä—É–≥—É—é –∫–∞—Ç–µ–≥–æ—Ä–∏—é' : 
                      '–°“Ø–∑–≥—ñ–ª–µ—Ä–¥—ñ ”©–∑–≥–µ—Ä—Ç—ñ–ø –∫”©—Ä—ñ“£—ñ–∑ –Ω–µ–º–µ—Å–µ –±–∞—Å“õ–∞ —Å–∞–Ω–∞—Ç—Ç—ã —Ç–∞“£–¥–∞“£—ã–∑'
                    }
                  </p>
                  <div className="mt-4 text-xs text-gray-400">
                    <p>üîß Debug info:</p>
                    <p>Category: {categoryId} (ID: {getCategoryIdNumber(categoryId || '')})</p>
                    <p>Listings in DB: {listings.length}</p>
                    <p>Is initialized: {isInitialized ? 'Yes' : 'No'}</p>
                  </div>
                </div>
              )}
            </div>
          </div>
        </div>
      </main>
      <Footer />
    </div>
  );
}
